# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  token: String!
  user: User!
}

input CreateTweetInput {
  content: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FollowResult {
  error: String
  success: Boolean!
  targetUser: User
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createTweet(input: CreateTweetInput!): Tweet!
  followUser(targetUserId: String!): FollowResult!
  login(input: LoginInput!): AuthPayload!
  signup(input: CreateUserInput!): AuthPayload!
  unfollowUser(targetUserId: String!): FollowResult!
}

interface Node {
  id: ID!
}

type Query {
  getUserTweets(userId: ID!): [Tweet!]!
  me: User!
  node(id: ID!): Node
  userByUsername(username: String!): User
}

type Tweet implements Node {
  author: User!
  authorId: Float!
  content: String!
  createdAt: DateTime!
  id: ID!
  likesCount: Float!
  repliesCount: Float!
  retweetsCount: Float!
  updatedAt: DateTime!
}

type User implements Node {
  createdAt: DateTime!
  email: String!
  followers: [User!]
  followersCount: Float!
  following: [User!]
  followingCount: Float!
  id: ID!
  isFollowedByMe: Boolean!
  updatedAt: DateTime!
  username: String!
}